AWSTemplateFormatVersion: "2010-09-09"

Description:
  generic cloudformation template for EC2 and ELB/ALB

Mappings:
  AmiId:
    default:
      balancer: ami-4dd6782e
      nginx:  ami-4dd6782e
  InstanceType:
    default:
      balancer: t2.micro
      nginx: t2.micro

Parameters:
  SshKeyName:
    Type: String
    Description: Optional - Name of an existing EC2 KeyPair to enable SSH access to the ECS instances
    Default: NoValue
  VpcStackName:
    Type: String

Conditions:
  HasSshKeyName: !Not [ !Equals [!Ref SshKeyName, NoValue] ]

Resources:
  SgDefault:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "sg for LoadBalancer"
      VpcId: !ImportValue {"Fn::Sub" : "${VpcStackName}-VpcId"}


  ingress1:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref SgDefault
      IpProtocol: tcp
      FromPort: 80
      ToPort: 80
      CidrIp: 0.0.0.0/0

  ingress2:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref SgDefault
      IpProtocol: tcp
      FromPort: 22
      ToPort: 22
      CidrIp: 0.0.0.0/0



  NginxLB:
    DependsOn:
      - NginxEc2ZoneA
      - NginxEc2ZoneB
    Type: "AWS::EC2::Instance"
    Properties: 
      DisableApiTermination: false
      InstanceInitiatedShutdownBehavior: stop
      #IamInstanceProfile: !Ref ApiInstanceProfileRef
      ImageId:
        !FindInMap
          - AmiId
          - default
          - balancer
      InstanceType: 
        !FindInMap
          - InstanceType
          - default
          - balancer
      KeyName:
        !If 
          - HasSshKeyName
          - !Ref SshKeyName
          - !Ref AWS::NoValue
      Monitoring: true
      Tags:
        - 
          Key: Name
          Value: cfn-nginx-lb
      NetworkInterfaces:
        -
          DeleteOnTermination: true
          Description: Primary network interface
          DeviceIndex: 0
          SubnetId: !ImportValue {"Fn::Sub" : "${VpcStackName}-PublicZoneA"}
          GroupSet:
           - !Ref SgDefault
          AssociatePublicIpAddress: true

      UserData:
        "Fn::Base64":
          !Sub 
            - |
                #!/bin/bash -xe
                yum update -y
                yum install -y nginx
                chkconfig nginx on
                cat<<EOF > /etc/nginx/conf.d/upstream.conf
                upstream backend {
                  server ${NginxEc2ZoneAIP};
                  server ${NginxEc2ZoneBIP};
                }
                EOF

                cat<<EOF > /etc/nginx/default.d/loadbalancer.conf
                location /demo.html {
                  proxy_pass http://backend;
                }
                EOF

                service nginx start
            - 
              NginxEc2ZoneAIP: !GetAtt NginxEc2ZoneA.PrivateIp
              NginxEc2ZoneBIP: !GetAtt NginxEc2ZoneB.PrivateIp


  NginxEc2ZoneA:
    Type: "AWS::EC2::Instance"
    Properties: 
      DisableApiTermination: false
      InstanceInitiatedShutdownBehavior: stop
      #IamInstanceProfile: !Ref ApiInstanceProfileRef
      ImageId:
        !FindInMap
          - AmiId
          - default
          - nginx
      InstanceType: 
        !FindInMap
          - InstanceType
          - default
          - nginx
      KeyName:
        !If 
          - HasSshKeyName
          - !Ref SshKeyName
          - !Ref AWS::NoValue
      Monitoring: true
      Tags:
        - 
          Key: Name
          Value: cfn-nginx-zonea
      NetworkInterfaces:
        -
          DeleteOnTermination: true
          Description: Primary network interface
          DeviceIndex: 0
          SubnetId: !ImportValue {"Fn::Sub" : "${VpcStackName}-EC2ZoneA"}
          GroupSet:
           - !Ref SgDefault
          AssociatePublicIpAddress: true
      UserData:
        "Fn::Base64": |
            #!/bin/bash -xe
            yum update -y
            yum install -y nginx
            chkconfig nginx on
            IID=$(curl -s http://169.254.169.254/latest/meta-data/instance-id)
            AZ=$(curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone)
            cat<<EOF > /usr/share/nginx/html/demo.html
            <h1>I am ${IID} in ${AZ}</h1>
            EOF
            service nginx start


  NginxEc2ZoneB:
    Type: "AWS::EC2::Instance"
    Properties: 
      DisableApiTermination: false
      InstanceInitiatedShutdownBehavior: stop
      #IamInstanceProfile: !Ref ApiInstanceProfileRef
      ImageId:
        !FindInMap
          - AmiId
          - default
          - nginx
      InstanceType: 
        !FindInMap
          - InstanceType
          - default
          - nginx
      KeyName:
        !If 
          - HasSshKeyName
          - !Ref SshKeyName
          - !Ref AWS::NoValue
      Monitoring: true
      Tags:
        - 
          Key: Name
          Value: cfn-nginx-zoneb
      NetworkInterfaces:
        -
          DeleteOnTermination: true
          Description: Primary network interface
          DeviceIndex: 0
          SubnetId: !ImportValue {"Fn::Sub" : "${VpcStackName}-EC2ZoneB"}
          GroupSet:
           - !Ref SgDefault
          AssociatePublicIpAddress: true
      UserData:
        "Fn::Base64": |
            #!/bin/bash -xe
            yum update -y
            yum install -y nginx
            chkconfig nginx on
            IID=$(curl -s http://169.254.169.254/latest/meta-data/instance-id)
            AZ=$(curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone)
            cat<<EOF > /usr/share/nginx/html/demo.html
            <h1>I am ${IID} in ${AZ}</h1>
            EOF
            service nginx start

Outputs:
  LoadBalancerURL:
    Value:
      !Join
        - ""
        -
          - http://
          - !GetAtt NginxLB.PublicDnsName
          - /demo.html
    Export:
      Name: LoadBalancerURL
